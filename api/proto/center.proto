syntax = "proto2";
package bs.center;
option go_package ="/center";

enum CMDCenter {
	IDAppRegReq			=1;			//服务注册
	IDAppRegRsp			=2;			//服务注册
	IDAppState			=3;			//服务状态
	IDAppOfflineReq		=4;			//服务离线
	IDPulseNotify		=5;			//服务心跳
	IDAppUpdateReq		=6;			//更新请求
};

message AppUpdateReq {
	optional string log_addr = 1; // 日志地址信息(log_ip:port,log_level)
}

//服务注册
message	RegisterAppReq {
	required string auth_key =1;
	optional string att_data =2;
	optional string my_address=3;
	optional uint32 app_type=4;   	//Router 或其他
	optional uint32 app_id =5;
	optional string rereg_token=6; 	//如果中间网络断开了,可以使用rereg_token强行再次注册
	optional string app_name = 7; 	//app的名称(一般为进程名)
};

//服务注册
message RegisterAppRsp {
	required uint32	reg_result = 1; 	//0表示成功，其它为错误码(rereg_token为出错内容)
	optional string	rereg_token = 2; 	//如果中间网络断开了,可以使用rereg_token强行再次注册
	optional uint32	center_id = 3;
	optional uint32 app_type=4;   		//Router 或其他
	optional uint32 app_id =5;
	optional string app_name = 6; 		//app的名称(一般为进程名)
	optional string app_address = 7; 	//监听地址
}

//服务状态
message AppStateNotify{
	enum state {
		Online=1;
		ReOnline=2;
		OffLine=3;
	} 
	required uint32 app_state=1;
	optional uint32 center_id=2;     
	optional uint32 app_type=4;
	optional uint32 app_id =5;
}

//服务离线
message AppOfflineReq
{
	optional bool is_offline = 1;	//是否下线
	optional uint32 app_id=2;
	optional uint32 app_type=3;
};

//服务心跳
message AppPulseNotify{
	enum PulseAction{
		HeartBeatReq=0;
		HeartBeatRsp=1;
		LogoutReq=2;
		LogoutRsp=3;
		AnotherLogin=5;//顶掉了。
	}
	required PulseAction action=1;
	optional uint64  pulse_data=2;
	optional uint32  load_data=3;
};