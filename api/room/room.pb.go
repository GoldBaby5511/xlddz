// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.20.3
// source: room.proto

package room

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	types "mango/api/types"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMDRoom int32

const (
	CMDRoom_IDNone           CMDRoom = 0
	CMDRoom_IDEnterReq       CMDRoom = 1  //进入房间
	CMDRoom_IDEnterRsp       CMDRoom = 2  //进入房间
	CMDRoom_IDGetChairReq    CMDRoom = 3  //请求座位
	CMDRoom_IDGetChairRsp    CMDRoom = 4  //请求座位
	CMDRoom_IDUserStatus     CMDRoom = 5  //用户状态
	CMDRoom_IDRequestFailure CMDRoom = 6  //请求失败
	CMDRoom_IDExitReq        CMDRoom = 10 //离开房间
	CMDRoom_IDExitRsp        CMDRoom = 11 //离开房间
	CMDRoom_IDConfigServer   CMDRoom = 12 //房间配置
	CMDRoom_IDUserEnter      CMDRoom = 13 //用户进入
	CMDRoom_IDTableInfo      CMDRoom = 14 //桌子信息
	CMDRoom_IDTableStatus    CMDRoom = 15 //桌子信息
	CMDRoom_IDLogonFinish    CMDRoom = 16 //登录完成
	CMDRoom_IDGameOption     CMDRoom = 17 //游戏配置
	CMDRoom_IDGameStatus     CMDRoom = 18 //游戏环境
	CMDRoom_IDGameScene      CMDRoom = 19 //游戏场景
	CMDRoom_IDUserReady      CMDRoom = 20 //用户准备
	CMDRoom_IDSystemMessage  CMDRoom = 21 //系统消息
)

// Enum value maps for CMDRoom.
var (
	CMDRoom_name = map[int32]string{
		0:  "IDNone",
		1:  "IDEnterReq",
		2:  "IDEnterRsp",
		3:  "IDGetChairReq",
		4:  "IDGetChairRsp",
		5:  "IDUserStatus",
		6:  "IDRequestFailure",
		10: "IDExitReq",
		11: "IDExitRsp",
		12: "IDConfigServer",
		13: "IDUserEnter",
		14: "IDTableInfo",
		15: "IDTableStatus",
		16: "IDLogonFinish",
		17: "IDGameOption",
		18: "IDGameStatus",
		19: "IDGameScene",
		20: "IDUserReady",
		21: "IDSystemMessage",
	}
	CMDRoom_value = map[string]int32{
		"IDNone":           0,
		"IDEnterReq":       1,
		"IDEnterRsp":       2,
		"IDGetChairReq":    3,
		"IDGetChairRsp":    4,
		"IDUserStatus":     5,
		"IDRequestFailure": 6,
		"IDExitReq":        10,
		"IDExitRsp":        11,
		"IDConfigServer":   12,
		"IDUserEnter":      13,
		"IDTableInfo":      14,
		"IDTableStatus":    15,
		"IDLogonFinish":    16,
		"IDGameOption":     17,
		"IDGameStatus":     18,
		"IDGameScene":      19,
		"IDUserReady":      20,
		"IDSystemMessage":  21,
	}
)

func (x CMDRoom) Enum() *CMDRoom {
	p := new(CMDRoom)
	*p = x
	return p
}

func (x CMDRoom) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMDRoom) Descriptor() protoreflect.EnumDescriptor {
	return file_room_proto_enumTypes[0].Descriptor()
}

func (CMDRoom) Type() protoreflect.EnumType {
	return &file_room_proto_enumTypes[0]
}

func (x CMDRoom) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CMDRoom.Descriptor instead.
func (CMDRoom) EnumDescriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{0}
}

type EnterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterReq) Reset() {
	*x = EnterReq{}
	mi := &file_room_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterReq) ProtoMessage() {}

func (x *EnterReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterReq.ProtoReflect.Descriptor instead.
func (*EnterReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{0}
}

type EnterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrInfo *types.ErrorInfo `protobuf:"bytes,99,opt,name=err_info,json=errInfo,proto3" json:"err_info,omitempty"`
}

func (x *EnterRsp) Reset() {
	*x = EnterRsp{}
	mi := &file_room_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRsp) ProtoMessage() {}

func (x *EnterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRsp.ProtoReflect.Descriptor instead.
func (*EnterRsp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{1}
}

func (x *EnterRsp) GetErrInfo() *types.ErrorInfo {
	if x != nil {
		return x.ErrInfo
	}
	return nil
}

type GetChairReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId  uint32 `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	ChairId  uint32 `protobuf:"varint,2,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetChairReq) Reset() {
	*x = GetChairReq{}
	mi := &file_room_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChairReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChairReq) ProtoMessage() {}

func (x *GetChairReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChairReq.ProtoReflect.Descriptor instead.
func (*GetChairReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{2}
}

func (x *GetChairReq) GetTableId() uint32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *GetChairReq) GetChairId() uint32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *GetChairReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GetChairRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   uint32           `protobuf:"varint,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ErrInfo *types.ErrorInfo `protobuf:"bytes,99,opt,name=err_info,json=errInfo,proto3" json:"err_info,omitempty"`
}

func (x *GetChairRsp) Reset() {
	*x = GetChairRsp{}
	mi := &file_room_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChairRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChairRsp) ProtoMessage() {}

func (x *GetChairRsp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChairRsp.ProtoReflect.Descriptor instead.
func (*GetChairRsp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{3}
}

func (x *GetChairRsp) GetAppId() uint32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *GetChairRsp) GetErrInfo() *types.ErrorInfo {
	if x != nil {
		return x.ErrInfo
	}
	return nil
}

type ExitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitReq) Reset() {
	*x = ExitReq{}
	mi := &file_room_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitReq) ProtoMessage() {}

func (x *ExitReq) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitReq.ProtoReflect.Descriptor instead.
func (*ExitReq) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{4}
}

type ExitRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrInfo *types.ErrorInfo `protobuf:"bytes,99,opt,name=err_info,json=errInfo,proto3" json:"err_info,omitempty"`
}

func (x *ExitRsp) Reset() {
	*x = ExitRsp{}
	mi := &file_room_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRsp) ProtoMessage() {}

func (x *ExitRsp) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRsp.ProtoReflect.Descriptor instead.
func (*ExitRsp) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{5}
}

func (x *ExitRsp) GetErrInfo() *types.ErrorInfo {
	if x != nil {
		return x.ErrInfo
	}
	return nil
}

type UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *types.BaseUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"` //用户信息
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	mi := &file_room_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{6}
}

func (x *UserStatus) GetUserInfo() *types.BaseUserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 请求失败
type RequestFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrInfo *types.ErrorInfo `protobuf:"bytes,99,opt,name=err_info,json=errInfo,proto3" json:"err_info,omitempty"`
}

func (x *RequestFailure) Reset() {
	*x = RequestFailure{}
	mi := &file_room_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFailure) ProtoMessage() {}

func (x *RequestFailure) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFailure.ProtoReflect.Descriptor instead.
func (*RequestFailure) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{7}
}

func (x *RequestFailure) GetErrInfo() *types.ErrorInfo {
	if x != nil {
		return x.ErrInfo
	}
	return nil
}

// 房间配置
type ConfigServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableCount uint32 `protobuf:"varint,1,opt,name=table_count,json=tableCount,proto3" json:"table_count,omitempty"` //桌子数目
	ChairCount uint32 `protobuf:"varint,2,opt,name=chair_count,json=chairCount,proto3" json:"chair_count,omitempty"` //椅子数目
	// 房间配置
	ServerType    uint32 `protobuf:"varint,3,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`            //房间类型
	ServerRule    uint32 `protobuf:"varint,4,opt,name=server_rule,json=serverRule,proto3" json:"server_rule,omitempty"`            //房间规则
	MinTableScore int64  `protobuf:"varint,5,opt,name=min_table_score,json=minTableScore,proto3" json:"min_table_score,omitempty"` //最低积分
}

func (x *ConfigServer) Reset() {
	*x = ConfigServer{}
	mi := &file_room_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigServer) ProtoMessage() {}

func (x *ConfigServer) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigServer.ProtoReflect.Descriptor instead.
func (*ConfigServer) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigServer) GetTableCount() uint32 {
	if x != nil {
		return x.TableCount
	}
	return 0
}

func (x *ConfigServer) GetChairCount() uint32 {
	if x != nil {
		return x.ChairCount
	}
	return 0
}

func (x *ConfigServer) GetServerType() uint32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *ConfigServer) GetServerRule() uint32 {
	if x != nil {
		return x.ServerRule
	}
	return 0
}

func (x *ConfigServer) GetMinTableScore() int64 {
	if x != nil {
		return x.MinTableScore
	}
	return 0
}

// 用户进入
type UserEnter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户属性
	GameId  uint32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`    //游戏 I D
	UserId  uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`    //用户 I D
	GroupId uint32 `protobuf:"varint,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"` //社团 I D
	// 头像信息
	FaceId   uint32 `protobuf:"varint,4,opt,name=face_id,json=faceId,proto3" json:"face_id,omitempty"`       //头像索引
	CustomId uint32 `protobuf:"varint,5,opt,name=custom_id,json=customId,proto3" json:"custom_id,omitempty"` //自定标识
	// 用户属性
	IsAndroid   bool   `protobuf:"varint,6,opt,name=is_android,json=isAndroid,proto3" json:"is_android,omitempty"`       //机器标识
	Gender      uint32 `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`                              //用户性别
	MemberOrder uint32 `protobuf:"varint,8,opt,name=member_order,json=memberOrder,proto3" json:"member_order,omitempty"` //会员等级
	MasterOrder uint32 `protobuf:"varint,9,opt,name=master_order,json=masterOrder,proto3" json:"master_order,omitempty"` //管理等级
	UserType    uint32 `protobuf:"varint,10,opt,name=user_type,json=userType,proto3" json:"user_type,omitempty"`         //用户类型
	// 用户状态
	TableId    uint32 `protobuf:"varint,11,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`          //桌子索引
	ChairId    uint32 `protobuf:"varint,12,opt,name=chair_id,json=chairId,proto3" json:"chair_id,omitempty"`          //椅子索引
	UserStatus uint32 `protobuf:"varint,13,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"` //用户状态
	// GPS信息
	Latitude  float32 `protobuf:"fixed32,14,opt,name=latitude,proto3" json:"latitude,omitempty"`   //用户纬度
	Longitude float32 `protobuf:"fixed32,15,opt,name=longitude,proto3" json:"longitude,omitempty"` //用户经度
	Height    float32 `protobuf:"fixed32,16,opt,name=height,proto3" json:"height,omitempty"`       //用户高度
	// 积分信息
	Score        int64   `protobuf:"varint,17,opt,name=score,proto3" json:"score,omitempty"`                                   //用户分数
	Grade        int64   `protobuf:"varint,18,opt,name=grade,proto3" json:"grade,omitempty"`                                   //用户成绩
	Insure       int64   `protobuf:"varint,19,opt,name=insure,proto3" json:"insure,omitempty"`                                 //用户银行
	Ingot        int64   `protobuf:"varint,20,opt,name=ingot,proto3" json:"ingot,omitempty"`                                   //用户元宝
	RedRevelopes int64   `protobuf:"varint,21,opt,name=red_revelopes,json=redRevelopes,proto3" json:"red_revelopes,omitempty"` //用户红包
	Beans        float64 `protobuf:"fixed64,22,opt,name=beans,proto3" json:"beans,omitempty"`                                  //用户游戏豆
	// 游戏信息
	WinCount      uint32 `protobuf:"varint,23,opt,name=win_count,json=winCount,proto3" json:"win_count,omitempty"`                //胜利盘数
	LostCount     uint32 `protobuf:"varint,24,opt,name=lost_count,json=lostCount,proto3" json:"lost_count,omitempty"`             //失败盘数
	DrawCount     uint32 `protobuf:"varint,25,opt,name=draw_count,json=drawCount,proto3" json:"draw_count,omitempty"`             //和局盘数
	FleeCount     uint32 `protobuf:"varint,26,opt,name=flee_count,json=fleeCount,proto3" json:"flee_count,omitempty"`             //逃跑盘数
	Experience    uint32 `protobuf:"varint,27,opt,name=experience,proto3" json:"experience,omitempty"`                            //用户经验
	LoveLiness    int32  `protobuf:"varint,28,opt,name=love_liness,json=loveLiness,proto3" json:"love_liness,omitempty"`          //用户魅力
	IntegralCount int64  `protobuf:"varint,29,opt,name=integral_count,json=integralCount,proto3" json:"integral_count,omitempty"` //积分总数(当前房间)
	// 代理信息
	AgentId uint32 `protobuf:"varint,30,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"` //代理 I D
}

func (x *UserEnter) Reset() {
	*x = UserEnter{}
	mi := &file_room_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserEnter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEnter) ProtoMessage() {}

func (x *UserEnter) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEnter.ProtoReflect.Descriptor instead.
func (*UserEnter) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{9}
}

func (x *UserEnter) GetGameId() uint32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *UserEnter) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserEnter) GetGroupId() uint32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *UserEnter) GetFaceId() uint32 {
	if x != nil {
		return x.FaceId
	}
	return 0
}

func (x *UserEnter) GetCustomId() uint32 {
	if x != nil {
		return x.CustomId
	}
	return 0
}

func (x *UserEnter) GetIsAndroid() bool {
	if x != nil {
		return x.IsAndroid
	}
	return false
}

func (x *UserEnter) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserEnter) GetMemberOrder() uint32 {
	if x != nil {
		return x.MemberOrder
	}
	return 0
}

func (x *UserEnter) GetMasterOrder() uint32 {
	if x != nil {
		return x.MasterOrder
	}
	return 0
}

func (x *UserEnter) GetUserType() uint32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *UserEnter) GetTableId() uint32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *UserEnter) GetChairId() uint32 {
	if x != nil {
		return x.ChairId
	}
	return 0
}

func (x *UserEnter) GetUserStatus() uint32 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *UserEnter) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UserEnter) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *UserEnter) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UserEnter) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UserEnter) GetGrade() int64 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *UserEnter) GetInsure() int64 {
	if x != nil {
		return x.Insure
	}
	return 0
}

func (x *UserEnter) GetIngot() int64 {
	if x != nil {
		return x.Ingot
	}
	return 0
}

func (x *UserEnter) GetRedRevelopes() int64 {
	if x != nil {
		return x.RedRevelopes
	}
	return 0
}

func (x *UserEnter) GetBeans() float64 {
	if x != nil {
		return x.Beans
	}
	return 0
}

func (x *UserEnter) GetWinCount() uint32 {
	if x != nil {
		return x.WinCount
	}
	return 0
}

func (x *UserEnter) GetLostCount() uint32 {
	if x != nil {
		return x.LostCount
	}
	return 0
}

func (x *UserEnter) GetDrawCount() uint32 {
	if x != nil {
		return x.DrawCount
	}
	return 0
}

func (x *UserEnter) GetFleeCount() uint32 {
	if x != nil {
		return x.FleeCount
	}
	return 0
}

func (x *UserEnter) GetExperience() uint32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *UserEnter) GetLoveLiness() int32 {
	if x != nil {
		return x.LoveLiness
	}
	return 0
}

func (x *UserEnter) GetIntegralCount() int64 {
	if x != nil {
		return x.IntegralCount
	}
	return 0
}

func (x *UserEnter) GetAgentId() uint32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

// 桌子信息
type TableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableCount       uint32               `protobuf:"varint,1,opt,name=table_count,json=tableCount,proto3" json:"table_count,omitempty"`                    //桌子数目
	TableStatusArray []*types.TableStatus `protobuf:"bytes,2,rep,name=table_status_array,json=tableStatusArray,proto3" json:"table_status_array,omitempty"` //桌子状态
}

func (x *TableInfo) Reset() {
	*x = TableInfo{}
	mi := &file_room_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableInfo) ProtoMessage() {}

func (x *TableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableInfo.ProtoReflect.Descriptor instead.
func (*TableInfo) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{10}
}

func (x *TableInfo) GetTableCount() uint32 {
	if x != nil {
		return x.TableCount
	}
	return 0
}

func (x *TableInfo) GetTableStatusArray() []*types.TableStatus {
	if x != nil {
		return x.TableStatusArray
	}
	return nil
}

// 桌子状态
type TableStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId     uint32             `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`            //桌子号码
	TableStatus *types.TableStatus `protobuf:"bytes,2,opt,name=table_status,json=tableStatus,proto3" json:"table_status,omitempty"` //桌子状态
}

func (x *TableStatus) Reset() {
	*x = TableStatus{}
	mi := &file_room_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStatus) ProtoMessage() {}

func (x *TableStatus) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStatus.ProtoReflect.Descriptor instead.
func (*TableStatus) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{11}
}

func (x *TableStatus) GetTableId() uint32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *TableStatus) GetTableStatus() *types.TableStatus {
	if x != nil {
		return x.TableStatus
	}
	return nil
}

// 登录完成
type LogonFinish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GuideTask bool `protobuf:"varint,1,opt,name=guide_task,json=guideTask,proto3" json:"guide_task,omitempty"` //引领任务
}

func (x *LogonFinish) Reset() {
	*x = LogonFinish{}
	mi := &file_room_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogonFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogonFinish) ProtoMessage() {}

func (x *LogonFinish) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogonFinish.ProtoReflect.Descriptor instead.
func (*LogonFinish) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{12}
}

func (x *LogonFinish) GetGuideTask() bool {
	if x != nil {
		return x.GuideTask
	}
	return false
}

// 游戏配置
type GameOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowLookon   uint32 `protobuf:"varint,1,opt,name=allow_lookon,json=allowLookon,proto3" json:"allow_lookon,omitempty"`       //旁观标志
	FrameVersion  uint32 `protobuf:"varint,2,opt,name=frame_version,json=frameVersion,proto3" json:"frame_version,omitempty"`    //框架版本
	ClientVersion uint32 `protobuf:"varint,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"` //游戏版本
}

func (x *GameOption) Reset() {
	*x = GameOption{}
	mi := &file_room_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOption) ProtoMessage() {}

func (x *GameOption) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOption.ProtoReflect.Descriptor instead.
func (*GameOption) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{13}
}

func (x *GameOption) GetAllowLookon() uint32 {
	if x != nil {
		return x.AllowLookon
	}
	return 0
}

func (x *GameOption) GetFrameVersion() uint32 {
	if x != nil {
		return x.FrameVersion
	}
	return 0
}

func (x *GameOption) GetClientVersion() uint32 {
	if x != nil {
		return x.ClientVersion
	}
	return 0
}

// 游戏环境
type GameStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameStatus  uint32 `protobuf:"varint,1,opt,name=game_status,json=gameStatus,proto3" json:"game_status,omitempty"`    //游戏状态
	AllowLookon uint32 `protobuf:"varint,2,opt,name=allow_lookon,json=allowLookon,proto3" json:"allow_lookon,omitempty"` //旁观标志
}

func (x *GameStatus) Reset() {
	*x = GameStatus{}
	mi := &file_room_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStatus) ProtoMessage() {}

func (x *GameStatus) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStatus.ProtoReflect.Descriptor instead.
func (*GameStatus) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{14}
}

func (x *GameStatus) GetGameStatus() uint32 {
	if x != nil {
		return x.GameStatus
	}
	return 0
}

func (x *GameStatus) GetAllowLookon() uint32 {
	if x != nil {
		return x.AllowLookon
	}
	return 0
}

// 系统消息
type SystemMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`     //消息类型
	Length uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"` //消息长度
	Info   string `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`      //消息内容
}

func (x *SystemMessage) Reset() {
	*x = SystemMessage{}
	mi := &file_room_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessage) ProtoMessage() {}

func (x *SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessage.ProtoReflect.Descriptor instead.
func (*SystemMessage) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{15}
}

func (x *SystemMessage) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SystemMessage) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *SystemMessage) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_room_proto protoreflect.FileDescriptor

var file_room_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x73,
	0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0x3a,
	0x0a, 0x08, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x72,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62,
	0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x65, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x54, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x63, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x72, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x09, 0x0a, 0x07, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x71, 0x22, 0x39, 0x0a, 0x07,
	0x45, 0x78, 0x69, 0x74, 0x52, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x65, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x40, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x08,
	0x65, 0x72, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xba, 0x01, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0xe3, 0x06, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x75, 0x72,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x67, 0x6f, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x67, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x64, 0x52, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x62, 0x65, 0x61,
	0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x64, 0x72, 0x61, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x6c, 0x65, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x66, 0x6c, 0x65, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x6f, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6c, 0x6f, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x71, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a,
	0x12, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x73, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x22, 0x62, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0c,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x73, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x69, 0x64, 0x65, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x67, 0x75, 0x69, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x22, 0x7b, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c,
	0x6f, 0x6f, 0x6b, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x50, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x6f,
	0x6b, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x2a, 0xd8, 0x02, 0x0a, 0x07, 0x43, 0x4d, 0x44, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x0a, 0x0a, 0x06, 0x49, 0x44, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x44, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x44, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x44, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x44, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x72, 0x52, 0x73, 0x70,
	0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x44,
	0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x71, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x44, 0x45,
	0x78, 0x69, 0x74, 0x52, 0x73, 0x70, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x44, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b,
	0x49, 0x44, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x10, 0x0d, 0x12, 0x0f, 0x0a,
	0x0b, 0x49, 0x44, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x0e, 0x12, 0x11,
	0x0a, 0x0d, 0x49, 0x44, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10,
	0x0f, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x10, 0x10, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x11, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x44, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x12, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x44, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x44,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x15, 0x42,
	0x10, 0x5a, 0x0e, 0x6d, 0x61, 0x6e, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_room_proto_rawDescOnce sync.Once
	file_room_proto_rawDescData = file_room_proto_rawDesc
)

func file_room_proto_rawDescGZIP() []byte {
	file_room_proto_rawDescOnce.Do(func() {
		file_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_proto_rawDescData)
	})
	return file_room_proto_rawDescData
}

var file_room_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_room_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_room_proto_goTypes = []any{
	(CMDRoom)(0),               // 0: bs.room.CMDRoom
	(*EnterReq)(nil),           // 1: bs.room.EnterReq
	(*EnterRsp)(nil),           // 2: bs.room.EnterRsp
	(*GetChairReq)(nil),        // 3: bs.room.GetChairReq
	(*GetChairRsp)(nil),        // 4: bs.room.GetChairRsp
	(*ExitReq)(nil),            // 5: bs.room.ExitReq
	(*ExitRsp)(nil),            // 6: bs.room.ExitRsp
	(*UserStatus)(nil),         // 7: bs.room.UserStatus
	(*RequestFailure)(nil),     // 8: bs.room.RequestFailure
	(*ConfigServer)(nil),       // 9: bs.room.ConfigServer
	(*UserEnter)(nil),          // 10: bs.room.UserEnter
	(*TableInfo)(nil),          // 11: bs.room.TableInfo
	(*TableStatus)(nil),        // 12: bs.room.TableStatus
	(*LogonFinish)(nil),        // 13: bs.room.LogonFinish
	(*GameOption)(nil),         // 14: bs.room.GameOption
	(*GameStatus)(nil),         // 15: bs.room.GameStatus
	(*SystemMessage)(nil),      // 16: bs.room.SystemMessage
	(*types.ErrorInfo)(nil),    // 17: bs.types.ErrorInfo
	(*types.BaseUserInfo)(nil), // 18: bs.types.BaseUserInfo
	(*types.TableStatus)(nil),  // 19: bs.types.TableStatus
}
var file_room_proto_depIdxs = []int32{
	17, // 0: bs.room.EnterRsp.err_info:type_name -> bs.types.ErrorInfo
	17, // 1: bs.room.GetChairRsp.err_info:type_name -> bs.types.ErrorInfo
	17, // 2: bs.room.ExitRsp.err_info:type_name -> bs.types.ErrorInfo
	18, // 3: bs.room.UserStatus.user_info:type_name -> bs.types.BaseUserInfo
	17, // 4: bs.room.RequestFailure.err_info:type_name -> bs.types.ErrorInfo
	19, // 5: bs.room.TableInfo.table_status_array:type_name -> bs.types.TableStatus
	19, // 6: bs.room.TableStatus.table_status:type_name -> bs.types.TableStatus
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_room_proto_init() }
func file_room_proto_init() {
	if File_room_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_room_proto_goTypes,
		DependencyIndexes: file_room_proto_depIdxs,
		EnumInfos:         file_room_proto_enumTypes,
		MessageInfos:      file_room_proto_msgTypes,
	}.Build()
	File_room_proto = out.File
	file_room_proto_rawDesc = nil
	file_room_proto_goTypes = nil
	file_room_proto_depIdxs = nil
}
